/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */

plugins {
    id 'java'
    id 'application'
    id 'eclipse'
    //id 'distribution'
   // id 'java-library'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {

    // Use JUnit test framework
   	testCompile(
            //'junit:junit:4.12',
            'org.junit.jupiter:junit-jupiter-api:5.4.0',
            'org.junit.platform:junit-platform-suite-api:1.4.0',
            'org.junit.platform:junit-platform-runner:1.4.0'

    )
    testRuntime(
            'org.junit.jupiter:junit-jupiter-engine:5.4.0',
            'org.junit.vintage:junit-vintage-engine:5.4.0'
    )
}

// main class (for manifest JAR)
def mainClass = 'org.massiccio.apigee.appdynamics.Launcher'

application {
	mainClassName = mainClass
}

run {
        systemProperties['jmx.url'] = 'service:jmx:rmi:///jndi/rmi://127.0.0.1:12345/jmxrmi'
}

test {
    useJUnitPlatform()

     // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    //maxParallelForks 1
    jvmArgs '-Dcom.sun.management.jmxremote'
    jvmArgs '-Dcom.sun.management.jmxremote.authenticate=false'
    jvmArgs '-Dcom.sun.management.jmxremote.ssl=false'
    jvmArgs '-Dcom.sun.management.jmxremote.port=12346'
    jvmArgs '-Dcom.sun.management.jmxremote.rmi.port=12346'
    jvmArgs '-Djava.rmi.server.hostname=localhost'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jar {
    manifest {
        attributes("Implementation-Title": "AppDynamics extension for Apigee Message Processor",
                   "Implementation-Version": '1.0',
                   "Main-Class": mainClass)
    }
}


task(runFakeService, dependsOn: 'classes', type: JavaExec) {
   main = 'org.massiccio.fakeservice.FakeService'
   classpath = sourceSets.test.runtimeClasspath
   description = 'Launches the fake service'
   jvmArgs '-Dcom.sun.management.jmxremote'
   jvmArgs '-Dcom.sun.management.jmxremote.authenticate=false'
   jvmArgs '-Dcom.sun.management.jmxremote.ssl=false'
   jvmArgs '-Dcom.sun.management.jmxremote.port=12345'
   jvmArgs '-Dcom.sun.management.jmxremote.rmi.port=12345'
   jvmArgs '-Djava.rmi.server.hostname=localhost'
}
